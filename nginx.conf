
#user  nobody;
  worker_processes 4; 
 worker_rlimit_nofile 65535;

error_log  /usr/zyh/nginx/logs/error.log;
error_log   /usr/zyh/nginx/logs/error.log  notice;
error_log   /usr/zyh/nginx/logs/error.log  info;

 pid         /usr/zyh/nginx/logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    add_header Access-Control-Allow-Origin *;#设置请求头跨域设置
    add_header Access-Control-Allow-Methods GET,POST,OPTIONS;#支持的请求方式
    add_header Access-Control-Allow-Headers X-Requested-With;
    include       mime.types;#MIME类型
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;

    #gzip  on;

	 upstream mysvr {   
      server 127.0.0.1:5000;#后端项目域名：端口
    }
	server {
	  listen   7777;
	  server_name localhost;
	  root /usr/zyh/aegis;#前端项目路径
      location / {
           index  index.html index.htm;
		   try_files $uri $uri/ @router;#避免history模式下白板
      }
	}
    server {
        listen       3000;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;
		root /usr/local/zstack/zstack-ui/tmp/WEB-INF/classes/public;
        location / {
            index  index.html index.htm;
			try_files $uri $uri/ @router;
        }
		
		location @router {
          rewrite ^.*$ /index.html last; # 接到截取的uri 并按一定规则重写uri和vue路由跳转
        }


        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        
		location ~ /apiCall/* {
            proxy_pass   http://mysvr;#代理请求路径
        }
		location ~ /events/* {
            proxy_pass   http://mysvr;
        }
		location ~ /zstack/* {
            proxy_pass   http://mysvr;
        }
		location ~ /calls/* {
		   proxy_pass   http://mysvr;
		}
		location ~ /plugins/* {
		  proxy_pass   http://mysvr;
		}
		location ~ /plugins/list/* {
		  add_header Cache-Control no-cache;
          # 为 public可以被任何对象缓存，private只能针对个人用户，而不能被代理服务器缓存
          add_header Cache-Control private;
		  proxy_pass   http://mysvr;
		}
		location ~/stomp/* {
          proxy_read_timeout   3600s; #超时设置
         #启用支持websocket连接
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_pass   http://mysvr;
        }
        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
